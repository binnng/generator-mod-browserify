{"name":"Generator-mod-browserify","tagline":"基于mod.js和browserify的yeoman生成器","body":"generator-mod-browserify\r\n======\r\n\r\n![yo](https://cloud.githubusercontent.com/assets/2696107/5752010/1b413f02-9ca8-11e4-8fd9-c03f34d72f40.jpg)\r\n\r\n\r\n> 基于 **mod.js** 和 **browserify** 的Yeoman生成器。\r\n\r\n\r\n### 准备\r\n\r\n你需要事先了解这几样东西\r\n\r\n1. [Yeoman](http://yeoman.io/)\r\n2. [CommonJs](http://javascript.ruanyifeng.com/nodejs/commonjs.html)\r\n3. [browserify](http://browserify.org/)\r\n4. [generator-webapp](https://github.com/yeoman/generator-webapp)\r\n\r\n项目基于[generator-webapp](https://github.com/yeoman/generator-webapp)做了很多扩展。\r\n\r\n\r\n简单介绍下browserify：\r\n\r\n> 将符合CommonJs规范的js代码生成浏览器可以直接执行的js代码。\r\n\r\n比如：\r\n\r\n```\r\n// a.js\r\nmodule.exports = \"this is a.js\"\r\n```\r\n\r\n```\r\n// b.js\r\nvar a = require(./a.js);\r\nconsole.log(a); // \"this is a.js\"\r\n```\r\n\r\n通过browserify，会将`a.js`和`b.js`合并成浏览器执行的js代码。\r\n\r\n### 安装\r\n\r\n##### 安装`Yo`\r\n\r\n你需要安装`Yo`，具体安装方法可以看看[这里](http://yeoman.io/learning/index.html)。\r\n\r\n###### 安装`Generator`\r\n\r\n```\r\nnpm install generator-mod-browserify -g\r\n```\r\n\r\n### 使用\r\n\r\n##### Yo一下\r\n\r\n```\r\nyo mod-browserify\r\n```\r\n\r\n\r\n##### 目录结构\r\n\r\n```\r\napp\r\n |-- components bower或者components外部依赖\r\n |-- images\r\n |-- styles\r\n   |-- app.scss 主入口css文件\r\n |-- scripts\r\n   |-- app.js 主入口js文件\r\n   |-- imports 待导入到app.js的所有js文件\r\n   |-- modules 本地模块\r\ntasks grunt拆分任务目录\r\n```\r\n\r\n### 说明\r\n\r\n##### `app/components`\r\n使用bower或者component安装的目录，不一定都是符合CommonJs规范。\r\n\r\n建议对于外部依赖提供的方法，都写在`app/scripts/imports/define.js`里：\r\n\r\n```\r\nvar $ = window(\"$\");\r\nvar Broadcast = require(\"binnng/broadcast\");\r\n```\r\n\r\n###### **注意**\r\n\r\n这里的`require`是mod.js(`app/components/mod.js/mod.js`)提供的方法，便于引入`app/components`里符合CommonJs规范的js文件，这也是我引入`mod.js`的主要原因。\r\n\r\n当然，如果符合CommonJs规范，你也可以写在`app/scripts/modules`里：\r\n\r\n```\r\nvar domify = require(\"../components/domify/domify.js\");\r\n```\r\n\r\n如果多个模块都要使用domify这个方法，那就得在`modules`文件里写很多遍上面的代码，所以还是建议写在`app/scripts/imports/define.js`里\r\n\r\n```\r\nvar domify = require(\"domify\");\r\n```\r\n\r\n`modules`里直接使用domify这个方法就行。\r\n\r\n具体可以看看我这篇issue：[为什么使用了browserify，还要使用mod.js](https://github.com/binnng/generator-mod-browserify/issues/1)\r\n\r\n##### tasks\r\n\r\n这是拆分了的grunt任务目录\r\n\r\n具体可以看看我这个项目：[grunt-task-module](https://github.com/binnng/grunt-task-module)\r\n\r\n主要作用是：\r\n\r\n> 拆分grunt任务，免得`gruntfile.js`越来越长，越来越难以维护。\r\n\r\n### 功能\r\n\r\n除了基本的[generator-webapp](https://github.com/yeoman/generator-webapp)提供的grunt服务，还做了些扩展。\r\n\r\n##### grunt publish\r\n发布\r\nbuild后如果要做些特殊处理，可以写在`tasks/publish.js`里。\r\n\r\n##### grunt doc\r\n生成js(Coffee)文档。\r\n可以看看[docco](http://jashkenas.github.io/docco/)。\r\n\r\n##### grunt serve:doc\r\n访问文档。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}